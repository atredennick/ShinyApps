s2 = 0.5,
lambda1 = 100,
lambda2 = 100,
alpha11 = 1,
alpha12 = 1,
alpha21 = 1,
alpha22 = 1,
g1 = gVec1[t],
g2 = gVec2[t])
newN <- annPlantStorage(params = params, N1 = N1, N2 = N2)
Nsave[t,1] <- newN[1]
Nsave[t,2] <- newN[2]
}
####
#### Plot results
####
plotD <- data.frame(Abundance = c(Nsave[,1], Nsave[,2]),
Species = c(rep("A",timeSim), rep("B", timeSim)),
Time = seq(1,timeSim,1))
ggplot(plotD, aes(x=Time, y=Abundance, color=Species))+
geom_line(size=2)+
scale_color_manual(values=c("grey25", "darkorange"))+
theme_bw()
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
# Code for running annual plant model with storage effect operating #
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
####
#### Load libraries
####
library(mvtnorm)
library(ggplot2)
####
#### Get model functions from source
####
source("annualPlantStorage_Functions.R")
####
#### Set model parameters
####
# s = survival of seeds in seedbanl
# N = abundance of seeds
# lambda = per capita fecundity
# alpha = competition coefficients
# rho = correlation between species' germination rates
# sigE = environmental variance (for germination rates)
s1 <- 0.5
s2 <- 0.5
lambda1 <- 100
lambda2 <- 100
alpha11 <- 1
alpha12 <- 1
alpha21 <- 1
alpha22 <- 1
sigE <- 2
rho <- 0
timeSim <- 100
initialN <- 100
####
#### Get germination vectors
####
gVec <- getG(sigE = sigE, rho = rho, nTime = timeSim)
gVec1 <- gVec[,1]
gVec2 <- gVec[,2]
####
#### Run model
####
Nsave <- matrix(nrow=timeSim, ncol=2)
Nsave[1,] <- initialN
for(t in 2:timeSim){
N1 <- Nsave[t-1,1]
N2 <- Nsave[t-1,2]
params <- list(s1 = 0.5,
s2 = 0.5,
lambda1 = 100,
lambda2 = 100,
alpha11 = 1,
alpha12 = 1,
alpha21 = 1,
alpha22 = 1,
g1 = gVec1[t],
g2 = gVec2[t])
newN <- annPlantStorage(params = params, N1 = N1, N2 = N2)
Nsave[t,1] <- newN[1]
Nsave[t,2] <- newN[2]
}
####
#### Plot results
####
plotD <- data.frame(Abundance = c(Nsave[,1], Nsave[,2]),
Species = c(rep("A",timeSim), rep("B", timeSim)),
Time = seq(1,timeSim,1))
ggplot(plotD, aes(x=Time, y=Abundance, color=Species))+
geom_line(size=2)+
scale_color_manual(values=c("grey25", "darkorange"))+
ylab("Seed Abundance")+
theme_bw()
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
# Code for running annual plant model with storage effect operating #
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
####
#### Load libraries
####
library(mvtnorm)
library(ggplot2)
####
#### Get model functions from source
####
source("annualPlantStorage_Functions.R")
####
#### Set model parameters
####
# s = survival of seeds in seedbanl
# N = abundance of seeds
# lambda = per capita fecundity
# alpha = competition coefficients
# rho = correlation between species' germination rates
# sigE = environmental variance (for germination rates)
s1 <- 0.5
s2 <- 0.5
lambda1 <- 100
lambda2 <- 98
alpha11 <- 1
alpha12 <- 1
alpha21 <- 1
alpha22 <- 1
sigE <- 2
rho <- 0
timeSim <- 100
initialN <- 100
####
#### Get germination vectors
####
gVec <- getG(sigE = sigE, rho = rho, nTime = timeSim)
gVec1 <- gVec[,1]
gVec2 <- gVec[,2]
####
#### Run model
####
Nsave <- matrix(nrow=timeSim, ncol=2)
Nsave[1,] <- initialN
for(t in 2:timeSim){
N1 <- Nsave[t-1,1]
N2 <- Nsave[t-1,2]
params <- list(s1 = 0.5,
s2 = 0.5,
lambda1 = 100,
lambda2 = 100,
alpha11 = 1,
alpha12 = 1,
alpha21 = 1,
alpha22 = 1,
g1 = gVec1[t],
g2 = gVec2[t])
newN <- annPlantStorage(params = params, N1 = N1, N2 = N2)
Nsave[t,1] <- newN[1]
Nsave[t,2] <- newN[2]
}
####
#### Plot results
####
plotD <- data.frame(Abundance = c(Nsave[,1], Nsave[,2]),
Species = c(rep("A",timeSim), rep("B", timeSim)),
Time = seq(1,timeSim,1))
ggplot(plotD, aes(x=Time, y=Abundance, color=Species))+
geom_line(size=2)+
scale_color_manual(values=c("grey25", "darkorange"))+
ylab("Seed Abundance")+
theme_bw()
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
# Code for running annual plant model with storage effect operating #
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
####
#### Load libraries
####
library(mvtnorm)
library(ggplot2)
####
#### Get model functions from source
####
source("annualPlantStorage_Functions.R")
####
#### Set model parameters
####
# s = survival of seeds in seedbanl
# N = abundance of seeds
# lambda = per capita fecundity
# alpha = competition coefficients
# rho = correlation between species' germination rates
# sigE = environmental variance (for germination rates)
s1 <- 0.5
s2 <- 0.5
lambda1 <- 100
lambda2 <- 98
alpha11 <- 1
alpha12 <- 1
alpha21 <- 1
alpha22 <- 1
sigE <- 2
rho <- 0
timeSim <- 100
initialN <- 100
####
#### Get germination vectors
####
gVec <- getG(sigE = sigE, rho = rho, nTime = timeSim)
gVec1 <- gVec[,1]
gVec2 <- gVec[,2]
####
#### Run model
####
Nsave <- matrix(nrow=timeSim, ncol=2)
Nsave[1,] <- initialN
for(t in 2:timeSim){
N1 <- Nsave[t-1,1]
N2 <- Nsave[t-1,2]
params <- list(s1 = 0.5,
s2 = 0.5,
lambda1 = 100,
lambda2 = 100,
alpha11 = 1,
alpha12 = 1,
alpha21 = 1,
alpha22 = 1,
g1 = gVec1[t],
g2 = gVec2[t])
newN <- annPlantStorage(params = params, N1 = N1, N2 = N2)
Nsave[t,1] <- newN[1]
Nsave[t,2] <- newN[2]
}
####
#### Plot results
####
plotD <- data.frame(Abundance = c(Nsave[,1], Nsave[,2]),
Species = c(rep("A",timeSim), rep("B", timeSim)),
Time = seq(1,timeSim,1))
ggplot(plotD, aes(x=Time, y=Abundance, color=Species))+
geom_line(size=2)+
scale_color_manual(values=c("grey25", "darkorange"))+
ylab("Seed Abundance")+
theme_bw()
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
# Code for running annual plant model with storage effect operating #
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
####
#### Load libraries
####
library(mvtnorm)
library(ggplot2)
####
#### Get model functions from source
####
source("annualPlantStorage_Functions.R")
####
#### Set model parameters
####
# s = survival of seeds in seedbanl
# N = abundance of seeds
# lambda = per capita fecundity
# alpha = competition coefficients
# rho = correlation between species' germination rates
# sigE = environmental variance (for germination rates)
s1 <- 0.5
s2 <- 0.5
lambda1 <- 100
lambda2 <- 98
alpha11 <- 1
alpha12 <- 1
alpha21 <- 1
alpha22 <- 1
sigE <- 2
rho <- 0
timeSim <- 100
initialN <- 100
####
#### Get germination vectors
####
gVec <- getG(sigE = sigE, rho = rho, nTime = timeSim)
gVec1 <- gVec[,1]
gVec2 <- gVec[,2]
####
#### Run model
####
Nsave <- matrix(nrow=timeSim, ncol=2)
Nsave[1,] <- initialN
for(t in 2:timeSim){
N1 <- Nsave[t-1,1]
N2 <- Nsave[t-1,2]
params <- list(s1 = 0.5,
s2 = 0.5,
lambda1 = 100,
lambda2 = 100,
alpha11 = 1,
alpha12 = 1,
alpha21 = 1,
alpha22 = 1,
g1 = gVec1[t],
g2 = gVec2[t])
newN <- annPlantStorage(params = params, N1 = N1, N2 = N2)
Nsave[t,1] <- newN[1]
Nsave[t,2] <- newN[2]
}
####
#### Plot results
####
plotD <- data.frame(Abundance = c(Nsave[,1], Nsave[,2]),
Species = c(rep("A",timeSim), rep("B", timeSim)),
Time = seq(1,timeSim,1))
ggplot(plotD, aes(x=Time, y=Abundance, color=Species))+
geom_line(size=2)+
scale_color_manual(values=c("grey25", "darkorange"))+
ylab("Seed Abundance")+
theme_bw()
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
# Code for running annual plant model with storage effect operating #
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
####
#### Load libraries
####
library(mvtnorm)
library(ggplot2)
####
#### Get model functions from source
####
source("annualPlantStorage_Functions.R")
####
#### Set model parameters
####
# s = survival of seeds in seedbanl
# N = abundance of seeds
# lambda = per capita fecundity
# alpha = competition coefficients
# rho = correlation between species' germination rates
# sigE = environmental variance (for germination rates)
s1 <- 0.5
s2 <- 0.5
lambda1 <- 100
lambda2 <- 98
alpha11 <- 1
alpha12 <- 1
alpha21 <- 1
alpha22 <- 1
sigE <- 2
rho <- 0
timeSim <- 100
initialN <- 100
####
#### Get germination vectors
####
gVec <- getG(sigE = sigE, rho = rho, nTime = timeSim)
gVec1 <- gVec[,1]
gVec2 <- gVec[,2]
####
#### Run model
####
Nsave <- matrix(nrow=timeSim, ncol=2)
Nsave[1,] <- initialN
for(t in 2:timeSim){
N1 <- Nsave[t-1,1]
N2 <- Nsave[t-1,2]
params <- list(s1 = 0.5,
s2 = 0.5,
lambda1 = 100,
lambda2 = 100,
alpha11 = 1,
alpha12 = 1,
alpha21 = 1,
alpha22 = 1,
g1 = gVec1[t],
g2 = gVec2[t])
newN <- annPlantStorage(params = params, N1 = N1, N2 = N2)
Nsave[t,1] <- newN[1]
Nsave[t,2] <- newN[2]
}
####
#### Plot results
####
plotD <- data.frame(Abundance = c(Nsave[,1], Nsave[,2]),
Species = c(rep("A",timeSim), rep("B", timeSim)),
Time = seq(1,timeSim,1))
ggplot(plotD, aes(x=Time, y=Abundance, color=Species))+
geom_line(size=2)+
scale_color_manual(values=c("grey25", "darkorange"))+
ylab("Seed Abundance")+
theme_bw()
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
# Code for running annual plant model with storage effect operating #
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
####
#### Load libraries
####
library(mvtnorm)
library(ggplot2)
####
#### Get model functions from source
####
source("annualPlantStorage_Functions.R")
####
#### Set model parameters
####
# s = survival of seeds in seedbanl
# N = abundance of seeds
# lambda = per capita fecundity
# alpha = competition coefficients
# rho = correlation between species' germination rates
# sigE = environmental variance (for germination rates)
s1 <- 0.5
s2 <- 0.5
lambda1 <- 100
lambda2 <- 98
alpha11 <- 1
alpha12 <- 1
alpha21 <- 1
alpha22 <- 1
sigE <- 2
rho <- 0
timeSim <- 100
initialN <- 100
####
#### Get germination vectors
####
gVec <- getG(sigE = sigE, rho = rho, nTime = timeSim)
gVec1 <- gVec[,1]
gVec2 <- gVec[,2]
####
#### Run model
####
Nsave <- matrix(nrow=timeSim, ncol=2)
Nsave[1,] <- initialN
for(t in 2:timeSim){
N1 <- Nsave[t-1,1]
N2 <- Nsave[t-1,2]
params <- list(s1 = 0.5,
s2 = 0.5,
lambda1 = 100,
lambda2 = 100,
alpha11 = 1,
alpha12 = 1,
alpha21 = 1,
alpha22 = 1,
g1 = gVec1[t],
g2 = gVec2[t])
newN <- annPlantStorage(params = params, N1 = N1, N2 = N2)
Nsave[t,1] <- newN[1]
Nsave[t,2] <- newN[2]
}
####
#### Plot results
####
plotD <- data.frame(Abundance = c(Nsave[,1], Nsave[,2]),
Species = c(rep("A",timeSim), rep("B", timeSim)),
Time = seq(1,timeSim,1))
ggplot(plotD, aes(x=Time, y=Abundance, color=Species))+
geom_line(size=2)+
scale_color_manual(values=c("grey25", "darkorange"))+
ylab("Seed Abundance")+
theme_bw()
setwd("~/Repos/ShinyApps/Chesson_incomplete")
library(shiny)
library(devtools)
library(shinyapps)
install.packages("shinyapps", dependencies = TRUE)
#Set your working drive here so that the folder of your app is in the directory
#Here are my funny paths:
# setwd("C:/Users/A02077138/Documents/GitHub/ShinyApps/Chesson")
#setwd("C:/Users/Britta/Dropbox/A.weekender/GitHub/Sandbox/ShinyApps/Chesson")
setwd("~/Repos/ShinyApps/Chesson_incomplete"))
#If you don't have devtools or shinyapps:
#install.packages('devtools')
#devtools::install_github('rstudio/shinyapps')
library(shiny)
library(devtools)
library(shinyapps)
#Run app locally
runApp("ChessonApp")
library(shinyapps)
install.packages("shinyapps")
devtools::install_github('rstudio/shinyapps')
setwd("~/Repos/ShinyApps/Chesson_incomplete"))
setwd("~/Repos/ShinyApps/Chesson_incomplete")
library(shiny)
library(devtools)
library(shinyapps)
runApp("ChessonApp")
setwd("~/Repos/ShinyApps/Chesson_incomplete")
library(shiny)
library(devtools)
library(shinyapps)
runApp("ChessonApp")
runApp("ChessonApp")
runApp("ChessonApp", display.mode = "showcase")
getwd()]
getwd()
source("./Scratch/annualPlantStorage_Functions.R")
source("./Scratch/annualPlantStorage_Functions.R")
setwd("~/Repos/ShinyApps/1_PopulationGrowth")
library(shiny)
library(devtools)
library(shinyapps)
runApp("PopGrowApp")
setwd("~/Repos/ShinyApps/Chesson_incomplete")
runApp("ChessonApp")
runApp("ChessonApp")
runApp("ChessonApp")
runApp("ChessonApp")
runApp("ChessonApp")
runApp("ChessonApp")
setwd("~/Repos/ShinyApps/Chesson_incomplete")
library(shiny)
library(devtools)
library(shinyapps)
library(ggplot2)
runApp("ChessonApp")
runApp("ChessonApp")
